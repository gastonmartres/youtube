- name: Set KUBECONFIG environment variable
  tags: [argocd]
  set_fact:
    kubeconfig_path: "/etc/rancher/rke2/rke2.yaml"

- name: Create ArgoCD namespace
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: argocd
    state: present
    kubeconfig: "{{ kubeconfig_path }}"
  delegate_to: "{{ groups['rke2_server'][0] }}"
  tags: [argocd]

- name: Set custom ArgoCD admin password
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: argocd-secret
        namespace: argocd
      type: Opaque
      stringData:
        admin.password: "{{ argocd_admin_password_hash }}"
        admin.passwordMtime: "{{ lookup('pipe', 'date +%FT%T') }}"
    kubeconfig: "{{ kubeconfig_path }}"
  delegate_to: "{{ groups['rke2_server'][0] }}"
  tags: [argocd]

- name: Apply ArgoCD installation manifests
  ansible.builtin.command: >
    kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml --validate=false
  delegate_to: "{{ groups['rke2_server'][0] }}"
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  tags: [argocd]


- name: Create Ingress for ArgoCD UI/API (HTTPS)
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: argocd-server-ingress
        namespace: argocd
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
      spec:
        ingressClassName: nginx
        rules:
        - host: "{{ argocd_ingress_https }}"
          http:
            paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: argocd-server
                  port:
                    number: 443
  delegate_to: "{{ groups['rke2_server'][0] }}"
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  tags: [argocd]

- name: Create Ingress for ArgoCD gRPC
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: argocd-grpc-ingress
        namespace: argocd
        annotations:
          nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
      spec:
        ingressClassName: nginx
        rules:
        - host: "{{ argocd_ingress_grpc }}"
          http:
            paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  name: argocd-server
                  port:
                    number: 443
  delegate_to: "{{ groups['rke2_server'][0] }}"
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  tags: [argocd]

- name: Try to read ArgoCD initial admin password (if it exists)
  ansible.builtin.shell: >
    kubectl -n argocd get secret argocd-initial-admin-secret
    -o jsonpath="{.data.password}" | base64 -d
  register: argocd_initial_pwd
  failed_when: false
  changed_when: false
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  delegate_to: "{{ groups['rke2_server'][0] }}"
  tags: [argocd]

- name: Display initial ArgoCD password before deletion
  ansible.builtin.debug:
    msg: "Initial ArgoCD admin password (autogenerated): {{ argocd_initial_pwd.stdout }}"
  when: argocd_initial_pwd.stdout != ""
  tags: [argocd]
